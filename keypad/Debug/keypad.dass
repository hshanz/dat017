
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8bc 	bl	20000180 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
#define GPIO_IDR_LOW ((volatile unsigned char *) (GPIO_D+0x10))
#define GPIO_IDR_HIGH ((volatile unsigned char *) (GPIO_D+0x11))
#define GPIO_ODR_LOW ((volatile unsigned char *) (GPIO_D+0x14))
#define GPIO_ODR_HIGH ((volatile unsigned char *) (GPIO_D+0x15)) 

void app_init(){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_MODER = 0x55005555;
20000014:	4b02      	ldr	r3, [pc, #8]	; (20000020 <app_init+0x10>)
20000016:	4a03      	ldr	r2, [pc, #12]	; (20000024 <app_init+0x14>)
20000018:	601a      	str	r2, [r3, #0]
}
2000001a:	46c0      	nop			; (mov r8, r8)
2000001c:	46bd      	mov	sp, r7
2000001e:	bd80      	pop	{r7, pc}
20000020:	40020c00 	andmi	r0, r2, r0, lsl #24
20000024:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab

20000028 <keyb>:

unsigned char keyb(void){
20000028:	b590      	push	{r4, r7, lr}
2000002a:	b087      	sub	sp, #28
2000002c:	af00      	add	r7, sp, #0
	
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
2000002e:	003b      	movs	r3, r7
20000030:	4a16      	ldr	r2, [pc, #88]	; (2000008c <keyb+0x64>)
20000032:	ca13      	ldmia	r2!, {r0, r1, r4}
20000034:	c313      	stmia	r3!, {r0, r1, r4}
20000036:	6812      	ldr	r2, [r2, #0]
20000038:	601a      	str	r2, [r3, #0]
	int row, col;
	for (row=1; row <=4 ; row++ ) {
2000003a:	2301      	movs	r3, #1
2000003c:	617b      	str	r3, [r7, #20]
2000003e:	e019      	b.n	20000074 <keyb+0x4c>
		kbdActivate( row );
20000040:	697b      	ldr	r3, [r7, #20]
20000042:	0018      	movs	r0, r3
20000044:	f000 f824 	bl	20000090 <kbdActivate>
		if( (col = kbdGetCol () ) ){
20000048:	f000 f84c 	bl	200000e4 <kbdGetCol>
2000004c:	0003      	movs	r3, r0
2000004e:	613b      	str	r3, [r7, #16]
20000050:	693b      	ldr	r3, [r7, #16]
20000052:	2b00      	cmp	r3, #0
20000054:	d00b      	beq.n	2000006e <keyb+0x46>
			kbdActivate( 0 );
20000056:	2000      	movs	r0, #0
20000058:	f000 f81a 	bl	20000090 <kbdActivate>
			return key [4*(row-1)+(col-1) ];
2000005c:	697b      	ldr	r3, [r7, #20]
2000005e:	3b01      	subs	r3, #1
20000060:	009a      	lsls	r2, r3, #2
20000062:	693b      	ldr	r3, [r7, #16]
20000064:	3b01      	subs	r3, #1
20000066:	18d3      	adds	r3, r2, r3
20000068:	003a      	movs	r2, r7
2000006a:	5cd3      	ldrb	r3, [r2, r3]
2000006c:	e009      	b.n	20000082 <keyb+0x5a>
	for (row=1; row <=4 ; row++ ) {
2000006e:	697b      	ldr	r3, [r7, #20]
20000070:	3301      	adds	r3, #1
20000072:	617b      	str	r3, [r7, #20]
20000074:	697b      	ldr	r3, [r7, #20]
20000076:	2b04      	cmp	r3, #4
20000078:	dde2      	ble.n	20000040 <keyb+0x18>
		}
	}	
	kbdActivate(0);
2000007a:	2000      	movs	r0, #0
2000007c:	f000 f808 	bl	20000090 <kbdActivate>
	return 0xFF;
20000080:	23ff      	movs	r3, #255	; 0xff
}
20000082:	0018      	movs	r0, r3
20000084:	46bd      	mov	sp, r7
20000086:	b007      	add	sp, #28
20000088:	bd90      	pop	{r4, r7, pc}
2000008a:	46c0      	nop			; (mov r8, r8)
2000008c:	20000198 	mulcs	r0, r8, r1

20000090 <kbdActivate>:

void kbdActivate( unsigned int row ){ 
20000090:	b580      	push	{r7, lr}
20000092:	b082      	sub	sp, #8
20000094:	af00      	add	r7, sp, #0
20000096:	6078      	str	r0, [r7, #4]
20000098:	687b      	ldr	r3, [r7, #4]
2000009a:	2b04      	cmp	r3, #4
2000009c:	d819      	bhi.n	200000d2 <kbdActivate+0x42>
2000009e:	687b      	ldr	r3, [r7, #4]
200000a0:	009a      	lsls	r2, r3, #2
200000a2:	4b0e      	ldr	r3, [pc, #56]	; (200000dc <kbdActivate+0x4c>)
200000a4:	18d3      	adds	r3, r2, r3
200000a6:	681b      	ldr	r3, [r3, #0]
200000a8:	469f      	mov	pc, r3
	/* Aktivera angiven rad hos tangentbordet, eller
	* deaktivera samtliga */
	switch( row ){
		case 1: *GPIO_ODR_HIGH = 0x10; break;
200000aa:	4b0d      	ldr	r3, [pc, #52]	; (200000e0 <kbdActivate+0x50>)
200000ac:	2210      	movs	r2, #16
200000ae:	701a      	strb	r2, [r3, #0]
200000b0:	e00f      	b.n	200000d2 <kbdActivate+0x42>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
200000b2:	4b0b      	ldr	r3, [pc, #44]	; (200000e0 <kbdActivate+0x50>)
200000b4:	2220      	movs	r2, #32
200000b6:	701a      	strb	r2, [r3, #0]
200000b8:	e00b      	b.n	200000d2 <kbdActivate+0x42>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
200000ba:	4b09      	ldr	r3, [pc, #36]	; (200000e0 <kbdActivate+0x50>)
200000bc:	2240      	movs	r2, #64	; 0x40
200000be:	701a      	strb	r2, [r3, #0]
200000c0:	e007      	b.n	200000d2 <kbdActivate+0x42>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
200000c2:	4b07      	ldr	r3, [pc, #28]	; (200000e0 <kbdActivate+0x50>)
200000c4:	2280      	movs	r2, #128	; 0x80
200000c6:	701a      	strb	r2, [r3, #0]
200000c8:	e003      	b.n	200000d2 <kbdActivate+0x42>
		case 0: *GPIO_ODR_HIGH = 0x00; break;
200000ca:	4b05      	ldr	r3, [pc, #20]	; (200000e0 <kbdActivate+0x50>)
200000cc:	2200      	movs	r2, #0
200000ce:	701a      	strb	r2, [r3, #0]
200000d0:	46c0      	nop			; (mov r8, r8)
	}
}
200000d2:	46c0      	nop			; (mov r8, r8)
200000d4:	46bd      	mov	sp, r7
200000d6:	b002      	add	sp, #8
200000d8:	bd80      	pop	{r7, pc}
200000da:	46c0      	nop			; (mov r8, r8)
200000dc:	200001a8 	andcs	r0, r0, r8, lsr #3
200000e0:	40020c15 	andmi	r0, r2, r5, lsl ip

200000e4 <kbdGetCol>:

int kbdGetCol ( void )
{ 	/* Om någon tangent (i aktiverad rad)
200000e4:	b580      	push	{r7, lr}
200000e6:	b082      	sub	sp, #8
200000e8:	af00      	add	r7, sp, #0
	* är nedtryckt, returnera dess kolumnnummer,
	* annars, returnera 0 */
	unsigned char c;
	c = *GPIO_IDR_HIGH;
200000ea:	4a12      	ldr	r2, [pc, #72]	; (20000134 <kbdGetCol+0x50>)
200000ec:	1dfb      	adds	r3, r7, #7
200000ee:	7812      	ldrb	r2, [r2, #0]
200000f0:	701a      	strb	r2, [r3, #0]
	if ( c & 0x8 ) return 4;
200000f2:	1dfb      	adds	r3, r7, #7
200000f4:	781b      	ldrb	r3, [r3, #0]
200000f6:	2208      	movs	r2, #8
200000f8:	4013      	ands	r3, r2
200000fa:	d001      	beq.n	20000100 <kbdGetCol+0x1c>
200000fc:	2304      	movs	r3, #4
200000fe:	e015      	b.n	2000012c <kbdGetCol+0x48>
	if ( c & 0x4 ) return 3;
20000100:	1dfb      	adds	r3, r7, #7
20000102:	781b      	ldrb	r3, [r3, #0]
20000104:	2204      	movs	r2, #4
20000106:	4013      	ands	r3, r2
20000108:	d001      	beq.n	2000010e <kbdGetCol+0x2a>
2000010a:	2303      	movs	r3, #3
2000010c:	e00e      	b.n	2000012c <kbdGetCol+0x48>
	if ( c & 0x2 ) return 2;
2000010e:	1dfb      	adds	r3, r7, #7
20000110:	781b      	ldrb	r3, [r3, #0]
20000112:	2202      	movs	r2, #2
20000114:	4013      	ands	r3, r2
20000116:	d001      	beq.n	2000011c <kbdGetCol+0x38>
20000118:	2302      	movs	r3, #2
2000011a:	e007      	b.n	2000012c <kbdGetCol+0x48>
	if ( c & 0x1 ) return 1;
2000011c:	1dfb      	adds	r3, r7, #7
2000011e:	781b      	ldrb	r3, [r3, #0]
20000120:	2201      	movs	r2, #1
20000122:	4013      	ands	r3, r2
20000124:	d001      	beq.n	2000012a <kbdGetCol+0x46>
20000126:	2301      	movs	r3, #1
20000128:	e000      	b.n	2000012c <kbdGetCol+0x48>
	return 0;
2000012a:	2300      	movs	r3, #0
}
2000012c:	0018      	movs	r0, r3
2000012e:	46bd      	mov	sp, r7
20000130:	b002      	add	sp, #8
20000132:	bd80      	pop	{r7, pc}
20000134:	40020c11 	andmi	r0, r2, r1, lsl ip

20000138 <outseg7>:


void outseg7(unsigned char c){
20000138:	b5b0      	push	{r4, r5, r7, lr}
2000013a:	b086      	sub	sp, #24
2000013c:	af00      	add	r7, sp, #0
2000013e:	0002      	movs	r2, r0
20000140:	1dfb      	adds	r3, r7, #7
20000142:	701a      	strb	r2, [r3, #0]
	if(c < 0xF){
20000144:	1dfb      	adds	r3, r7, #7
20000146:	781b      	ldrb	r3, [r3, #0]
20000148:	2b0e      	cmp	r3, #14
2000014a:	d80d      	bhi.n	20000168 <outseg7+0x30>
	unsigned char SEG_CODES[16] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x2E,0x79,0x71};
2000014c:	2008      	movs	r0, #8
2000014e:	183b      	adds	r3, r7, r0
20000150:	4a09      	ldr	r2, [pc, #36]	; (20000178 <outseg7+0x40>)
20000152:	ca32      	ldmia	r2!, {r1, r4, r5}
20000154:	c332      	stmia	r3!, {r1, r4, r5}
20000156:	6812      	ldr	r2, [r2, #0]
20000158:	601a      	str	r2, [r3, #0]
	*GPIO_ODR_LOW = SEG_CODES[c];
2000015a:	1dfb      	adds	r3, r7, #7
2000015c:	781b      	ldrb	r3, [r3, #0]
2000015e:	4907      	ldr	r1, [pc, #28]	; (2000017c <outseg7+0x44>)
20000160:	183a      	adds	r2, r7, r0
20000162:	5cd3      	ldrb	r3, [r2, r3]
20000164:	700b      	strb	r3, [r1, #0]
	}
	else{
		*GPIO_ODR_LOW = 0;
	}
}
20000166:	e002      	b.n	2000016e <outseg7+0x36>
		*GPIO_ODR_LOW = 0;
20000168:	4b04      	ldr	r3, [pc, #16]	; (2000017c <outseg7+0x44>)
2000016a:	2200      	movs	r2, #0
2000016c:	701a      	strb	r2, [r3, #0]
}
2000016e:	46c0      	nop			; (mov r8, r8)
20000170:	46bd      	mov	sp, r7
20000172:	b006      	add	sp, #24
20000174:	bdb0      	pop	{r4, r5, r7, pc}
20000176:	46c0      	nop			; (mov r8, r8)
20000178:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
2000017c:	40020c14 	andmi	r0, r2, r4, lsl ip

20000180 <main>:
void main(void){
20000180:	b580      	push	{r7, lr}
20000182:	af00      	add	r7, sp, #0
	app_init();
20000184:	f7ff ff44 	bl	20000010 <app_init>
	while(1){
		outseg7(keyb());
20000188:	f7ff ff4e 	bl	20000028 <keyb>
2000018c:	0003      	movs	r3, r0
2000018e:	0018      	movs	r0, r3
20000190:	f7ff ffd2 	bl	20000138 <outseg7>
20000194:	e7f8      	b.n	20000188 <main+0x8>
20000196:	46c0      	nop			; (mov r8, r8)
20000198:	0a030201 	beq	200c09a4 <main+0xc0824>
2000019c:	0b060504 	bleq	201815b4 <main+0x181434>
200001a0:	0c090807 	stceq	8, cr0, [r9], {7}
200001a4:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000174 <outseg7+0x3c>
200001a8:	200000ca 	andcs	r0, r0, sl, asr #1
200001ac:	200000aa 	andcs	r0, r0, sl, lsr #1
200001b0:	200000b2 	strhcs	r0, [r0], -r2
200001b4:	200000ba 	strhcs	r0, [r0], -sl
200001b8:	200000c2 	andcs	r0, r0, r2, asr #1
200001bc:	4f5b063f 	svcmi	0x005b063f
200001c0:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001c4:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
200001c8:	71792e39 	cmnvc	r9, r9, lsr lr

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000196 	muleq	r0, r6, r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	00009f0c 	andeq	r9, r0, ip, lsl #30
  14:	00011900 	andeq	r1, r1, r0, lsl #18
	...
  24:	01030200 	mrseq	r0, R11_usr
  28:	4c010000 	stcmi	0, cr0, [r1], {-0}
  2c:	00018006 	andeq	r8, r1, r6
  30:	00001620 	andeq	r1, r0, r0, lsr #12
  34:	039c0100 	orrseq	r0, ip, #0, 2
  38:	00000108 	andeq	r0, r0, r8, lsl #2
  3c:	38064301 	stmdacc	r6, {r0, r8, r9, lr}
  40:	48200001 	stmdami	r0!, {r0}
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	0000749c 	muleq	r0, ip, r4
  4c:	00630400 	rsbeq	r0, r3, r0, lsl #8
  50:	741c4301 	ldrvc	r4, [ip], #-769	; 0xfffffcff
  54:	02000000 	andeq	r0, r0, #0
  58:	4c055f91 	stcmi	15, cr5, [r5], {145}	; 0x91
  5c:	1a200001 	bne	800068 <startup-0x1f7fff98>
  60:	06000000 	streq	r0, [r0], -r0
  64:	00000089 	andeq	r0, r0, r9, lsl #1
  68:	7b104501 	blvc	411474 <startup-0x1fbeeb8c>
  6c:	02000000 	andeq	r0, r0, #0
  70:	00006091 	muleq	r0, r1, r0
  74:	f0080107 			; <UNDEFINED> instruction: 0xf0080107
  78:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  7c:	00000074 	andeq	r0, r0, r4, ror r0
  80:	0000008b 	andeq	r0, r0, fp, lsl #1
  84:	00008b09 	andeq	r8, r0, r9, lsl #22
  88:	07000f00 	streq	r0, [r0, -r0, lsl #30]
  8c:	007c0704 	rsbseq	r0, ip, r4, lsl #14
  90:	de0a0000 	cdple	0, 0, cr0, cr10, cr0, {0}
  94:	01000000 	mrseq	r0, (UNDEF: 0)
  98:	00ba0535 	adcseq	r0, sl, r5, lsr r5
  9c:	00e40000 	rsceq	r0, r4, r0
  a0:	00542000 	subseq	r2, r4, r0
  a4:	9c010000 	stcls	0, cr0, [r1], {-0}
  a8:	000000ba 	strheq	r0, [r0], -sl
  ac:	0100630b 	tsteq	r0, fp, lsl #6
  b0:	00741039 	rsbseq	r1, r4, r9, lsr r0
  b4:	91020000 	mrsls	r0, (UNDEF: 2)
  b8:	040c0077 	streq	r0, [ip], #-119	; 0xffffff89
  bc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  c0:	00930300 	addseq	r0, r3, r0, lsl #6
  c4:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
  c8:	00009006 	andeq	r9, r0, r6
  cc:	00005420 	andeq	r5, r0, r0, lsr #8
  d0:	e79c0100 	ldr	r0, [ip, r0, lsl #2]
  d4:	04000000 	streq	r0, [r0], #-0
  d8:	00776f72 	rsbseq	r6, r7, r2, ror pc
  dc:	8b202901 	blhi	80a4e8 <startup-0x1f7f5b18>
  e0:	02000000 	andeq	r0, r0, #0
  e4:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
  e8:	000000fe 	strdeq	r0, [r0], -lr
  ec:	740f1a01 	strvc	r1, [pc], #-2561	; f4 <startup-0x1fffff0c>
  f0:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
  f4:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
  f8:	01000000 	mrseq	r0, (UNDEF: 0)
  fc:	0001759c 	muleq	r1, ip, r5
 100:	656b0b00 	strbvs	r0, [fp, #-2816]!	; 0xfffff500
 104:	1c010079 	stcne	0, cr0, [r1], {121}	; 0x79
 108:	00007b10 	andeq	r7, r0, r0, lsl fp
 10c:	58910200 	ldmpl	r1, {r9}
 110:	776f720b 	strbvc	r7, [pc, -fp, lsl #4]!
 114:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
 118:	000000ba 	strheq	r0, [r0], -sl
 11c:	0b6c9102 	bleq	1b2452c <startup-0x1e4dbad4>
 120:	006c6f63 	rsbeq	r6, ip, r3, ror #30
 124:	ba0b1d01 	blt	2c7530 <startup-0x1fd38ad0>
 128:	02000000 	andeq	r0, r0, #0
 12c:	930e6891 	movwls	r6, #59537	; 0xe891
 130:	01000000 	mrseq	r0, (UNDEF: 0)
 134:	00ba031f 	adcseq	r0, sl, pc, lsl r3
 138:	01400000 	mrseq	r0, (UNDEF: 64)
 13c:	000f0000 	andeq	r0, pc, r0
 140:	00004005 	andeq	r4, r0, r5
 144:	00002e20 	andeq	r2, r0, r0, lsr #28
 148:	00930e00 	addseq	r0, r3, r0, lsl #28
 14c:	1f010000 	svcne	0x00010000
 150:	0000ba03 	andeq	fp, r0, r3, lsl #20
 154:	00015b00 	andeq	r5, r1, r0, lsl #22
 158:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
 15c:	20000048 	andcs	r0, r0, r8, asr #32
 160:	00000026 	andeq	r0, r0, r6, lsr #32
 164:	0000de10 	andeq	sp, r0, r0, lsl lr
 168:	0e200100 	sufeqs	f0, f0, f0
 16c:	000000ba 	strheq	r0, [r0], -sl
 170:	0000000f 	andeq	r0, r0, pc
 174:	01101100 	tsteq	r0, r0, lsl #2
 178:	16010000 	strne	r0, [r1], -r0
 17c:	00001006 	andeq	r1, r0, r6
 180:	00001820 	andeq	r1, r0, r0, lsr #16
 184:	129c0100 	addsne	r0, ip, #0, 2
 188:	000000e8 	andeq	r0, r0, r8, ror #1
 18c:	00060601 	andeq	r0, r6, r1, lsl #12
 190:	0c200000 	stceq	0, cr0, [r0], #-0
 194:	01000000 	mrseq	r0, (UNDEF: 0)
 198:	Address 0x00000198 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	00194296 	mulseq	r9, r6, r2
  2c:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
  30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  40:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  44:	00130119 	andseq	r0, r3, r9, lsl r1
  48:	00050400 	andeq	r0, r5, r0, lsl #8
  4c:	0b3a0803 	bleq	e82060 <startup-0x1f17dfa0>
  50:	0b390b3b 	bleq	e42d44 <startup-0x1f1bd2bc>
  54:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  58:	0b050000 	bleq	140060 <startup-0x1febffa0>
  5c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  60:	06000006 	streq	r0, [r0], -r6
  64:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  68:	0b3b0b3a 	bleq	ec2d58 <startup-0x1f13d2a8>
  6c:	13490b39 	movtne	r0, #39737	; 0x9b39
  70:	00001802 	andeq	r1, r0, r2, lsl #16
  74:	0b002407 	bleq	9098 <startup-0x1fff6f68>
  78:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  7c:	0800000e 	stmdaeq	r0, {r1, r2, r3}
  80:	13490101 	movtne	r0, #37121	; 0x9101
  84:	00001301 	andeq	r1, r0, r1, lsl #6
  88:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
  8c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  a0:	01111349 	tsteq	r1, r9, asr #6
  a4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a8:	01194297 			; <UNDEFINED> instruction: 0x01194297
  ac:	0b000013 	bleq	100 <startup-0x1fffff00>
  b0:	08030034 	stmdaeq	r3, {r2, r4, r5}
  b4:	0b3b0b3a 	bleq	ec2da4 <startup-0x1f13d25c>
  b8:	13490b39 	movtne	r0, #39737	; 0x9b39
  bc:	00001802 	andeq	r1, r0, r2, lsl #16
  c0:	0b00240c 	bleq	90f8 <startup-0x1fff6f08>
  c4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  c8:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
  cc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  d0:	0b3a0e03 	bleq	e838e4 <startup-0x1f17c71c>
  d4:	0b390b3b 	bleq	e42dc8 <startup-0x1f1bd238>
  d8:	13491927 	movtne	r1, #39207	; 0x9927
  dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
  e0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  e4:	00130119 	andseq	r0, r3, r9, lsl r1
  e8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  ec:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  f0:	0b3b0b3a 	bleq	ec2de0 <startup-0x1f13d220>
  f4:	13490b39 	movtne	r0, #39737	; 0x9b39
  f8:	1301193c 	movwne	r1, #6460	; 0x193c
  fc:	180f0000 	stmdane	pc, {}	; <UNPREDICTABLE>
 100:	10000000 	andne	r0, r0, r0
 104:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 108:	0b3a0e03 	bleq	e8391c <startup-0x1f17c6e4>
 10c:	0b390b3b 	bleq	e42e00 <startup-0x1f1bd200>
 110:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 114:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 118:	03193f00 	tsteq	r9, #0, 30
 11c:	3b0b3a0e 	blcc	2ce95c <startup-0x1fd316a4>
 120:	110b390b 	tstne	fp, fp, lsl #18
 124:	40061201 	andmi	r1, r6, r1, lsl #4
 128:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 12c:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 130:	03193f00 	tsteq	r9, #0, 30
 134:	3b0b3a0e 	blcc	2ce974 <startup-0x1fd3168c>
 138:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 13c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 140:	97184006 	ldrls	r4, [r8, -r6]
 144:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000186 	andeq	r0, r0, r6, lsl #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000196 	mulcs	r0, r6, r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000016b 	andeq	r0, r0, fp, ror #2
   4:	00550003 	subseq	r0, r5, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	69766144 	ldmdbvs	r6!, {r2, r6, r8, sp, lr}^
  28:	6f442f64 	svcvs	0x00442f64
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
  38:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
  3c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  40:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  44:	6262616c 	rsbvs	r6, r2, #108, 2
  48:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  4c:	00646170 	rsbeq	r6, r4, r0, ror r1
  50:	61747300 	cmnvs	r4, r0, lsl #6
  54:	70757472 	rsbsvc	r7, r5, r2, ror r4
  58:	0100632e 	tsteq	r0, lr, lsr #6
  5c:	05000000 	streq	r0, [r0, #-0]
  60:	02050001 	andeq	r0, r5, #1
  64:	20000000 	andcs	r0, r0, r0
  68:	21211318 			; <UNDEFINED> instruction: 0x21211318
  6c:	0302212f 	movweq	r2, #8495	; 0x212f
  70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  74:	02050010 	andeq	r0, r5, #16
  78:	20000010 	andcs	r0, r0, r0, lsl r0
  7c:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
  80:	0e052f02 	cdpeq	15, 0, cr2, cr5, cr2, {0}
  84:	2f010520 	svccs	0x00010520
  88:	05761905 	ldrbeq	r1, [r6, #-2309]!	; 0xfffff6fb
  8c:	0a053e10 	beq	14f8d4 <startup-0x1feb072c>
  90:	2e020568 	cfsh32cs	mvfx0, mvfx2, #56
  94:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
  98:	05054b0e 	streq	r4, [r5, #-2830]	; 0xfffff4f2
  9c:	3d04054a 	cfstr32cc	mvfx0, [r4, #-296]	; 0xfffffed8
  a0:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
  a4:	1e052e11 	mcrne	14, 0, r2, cr5, cr1, {0}
  a8:	2e190520 	cfmul64cs	mvdx0, mvdx9, mvdx0
  ac:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
  b0:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
  b4:	02053802 	andeq	r3, r5, #131072	; 0x20000
  b8:	01040200 	mrseq	r0, R12_usr
  bc:	0905433c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, lr}
  c0:	0001053d 	andeq	r0, r1, sp, lsr r5
  c4:	21010402 	tstcs	r1, r2, lsl #8
  c8:	05762505 	ldrbeq	r2, [r6, #-1285]!	; 0xfffffafb
  cc:	1a05cc0b 	bne	173100 <startup-0x1fe8cf00>
  d0:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  d4:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  d8:	0305201a 	movweq	r2, #20506	; 0x501a
  dc:	210b052e 	tstcs	fp, lr, lsr #10
  e0:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
  e4:	0b052e03 	bleq	14b8f8 <startup-0x1feb4708>
  e8:	201a0521 	andscs	r0, sl, r1, lsr #10
  ec:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  f0:	1a05210b 	bne	148524 <startup-0x1feb7adc>
  f4:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  f8:	93220105 			; <UNDEFINED> instruction: 0x93220105
  fc:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
 100:	09052004 	stmdbeq	r5, {r2, sp}
 104:	4a05053d 	bmi	141600 <startup-0x1febea00>
 108:	02001805 	andeq	r1, r0, #327680	; 0x50000
 10c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 110:	05052f09 	streq	r2, [r5, #-3849]	; 0xfffff0f7
 114:	0018054a 	andseq	r0, r8, sl, asr #10
 118:	20010402 	andcs	r0, r1, r2, lsl #8
 11c:	052f0905 	streq	r0, [pc, #-2309]!	; fffff81f <main+0xdffff69f>
 120:	18054a05 	stmdane	r5, {r0, r2, r9, fp, lr}
 124:	01040200 	mrseq	r0, R12_usr
 128:	2f090520 	svccs	0x00090520
 12c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
 130:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
 134:	09052001 	stmdbeq	r5, {r0, sp}
 138:	2101052f 	tstcs	r1, pc, lsr #10
 13c:	05691e05 	strbeq	r1, [r9, #-3589]!	; 0xfffff1fb
 140:	10056704 	andne	r6, r5, r4, lsl #14
 144:	751b054b 	ldrvc	r0, [fp, #-1355]	; 0xfffffab5
 148:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 14c:	1005201b 	andne	r2, r5, fp, lsl r0
 150:	2501052e 	strcs	r0, [r1, #-1326]	; 0xfffffad2
 154:	051e0305 	ldreq	r0, [lr, #-773]	; 0xfffffcfb
 158:	01052011 	tsteq	r5, r1, lsl r0
 15c:	91100530 	tstls	r0, r0, lsr r5
 160:	052f0205 	streq	r0, [pc, #-517]!	; ffffff63 <main+0xdffffde3>
 164:	04020003 	streq	r0, [r2], #-3
 168:	07023001 	streq	r3, [r2, -r1]
 16c:	Address 0x0000016c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	47455300 	strbmi	r5, [r5, -r0, lsl #6]
  8c:	444f435f 	strbmi	r4, [pc], #-863	; 94 <startup-0x1fffff6c>
  90:	6b005345 	blvs	14dac <startup-0x1ffeb254>
  94:	63416462 	movtvs	r6, #5218	; 0x1462
  98:	61766974 	cmnvs	r6, r4, ror r9
  9c:	43006574 	movwmi	r6, #1396	; 0x574
  a0:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  a4:	2f737265 	svccs	0x00737265
  a8:	69766144 	ldmdbvs	r6!, {r2, r6, r8, sp, lr}^
  ac:	6f442f64 	svcvs	0x00442f64
  b0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  b4:	2f73746e 	svccs	0x0073746e
  b8:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
  bc:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
  c0:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  c4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  c8:	6262616c 	rsbvs	r6, r2, #108, 2
  cc:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  d0:	2f646170 	svccs	0x00646170
  d4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  d8:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  dc:	626b0063 	rsbvs	r0, fp, #99	; 0x63
  e0:	74654764 	strbtvc	r4, [r5], #-1892	; 0xfffff89c
  e4:	006c6f43 	rsbeq	r6, ip, r3, asr #30
  e8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  ec:	00707574 	rsbseq	r7, r0, r4, ror r5
  f0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  f4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  f8:	61686320 	cmnvs	r8, r0, lsr #6
  fc:	656b0072 	strbvs	r0, [fp, #-114]!	; 0xffffff8e
 100:	6d006279 	sfmvs	f6, 4, [r0, #-484]	; 0xfffffe1c
 104:	006e6961 	rsbeq	r6, lr, r1, ror #18
 108:	7374756f 	cmnvc	r4, #465567744	; 0x1bc00000
 10c:	00376765 	eorseq	r6, r7, r5, ror #14
 110:	5f707061 	svcpl	0x00707061
 114:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 118:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
 11c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 120:	61445c73 	hvcvs	17859	; 0x45c3
 124:	5c646976 			; <UNDEFINED> instruction: 0x5c646976
 128:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 12c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 130:	68435c73 	stmdavs	r3, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
 134:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 138:	4d5c7372 	ldclmi	3, cr7, [ip, #-456]	; 0xfffffe38
 13c:	6d5c504f 	ldclvs	0, cr5, [ip, #-316]	; 0xfffffec4
 140:	616c706f 	cmnvs	ip, pc, rrx
 144:	6b5c6262 	blvs	1718ad4 <startup-0x1e8e752c>
 148:	61707965 	cmnvs	r0, r5, ror #18
 14c:	Address 0x0000014c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000028 	andcs	r0, r0, r8, lsr #32
  48:	00000068 	andeq	r0, r0, r8, rrx
  4c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  50:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  54:	280e4101 	stmdacs	lr, {r0, r8, lr}
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000090 	mulcs	r0, r0, r0
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000e4 	andcs	r0, r0, r4, ror #1
  88:	00000054 	andeq	r0, r0, r4, asr r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	00000020 	andeq	r0, r0, r0, lsr #32
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000138 	andcs	r0, r0, r8, lsr r1
  a8:	00000048 	andeq	r0, r0, r8, asr #32
  ac:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  b0:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  b4:	41018e02 	tstmi	r1, r2, lsl #28
  b8:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  bc:	00000007 	andeq	r0, r0, r7
  c0:	00000018 	andeq	r0, r0, r8, lsl r0
  c4:	00000000 	andeq	r0, r0, r0
  c8:	20000180 	andcs	r0, r0, r0, lsl #3
  cc:	00000016 	andeq	r0, r0, r6, lsl r0
  d0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d4:	41018e02 	tstmi	r1, r2, lsl #28
  d8:	0000070d 	andeq	r0, r0, sp, lsl #14
